---
import Layout from "../../layouts/Layout.astro";

export const prerender = false;

import { XRPC, CredentialManager } from "@atcute/client";
import { createSlug } from "../../lib";
const manager = new CredentialManager({
    service: "https://amanita.us-east.host.bsky.network",
});
const rpc = new XRPC({ handler: manager });
// const { data } = await rpc.get("com.atproto.repo.getRecord", {
//     params: {
//         collection: "com.whtwnd.blog.entry",
//         repo: "nandi.dads.lol",
//         rkey: Astro.params.rkey,
//     },
// });

import { z } from "zod";

const Post = z.object({
    cid: z.string(),
    value: z.object({
        title: z.string(),
        createdAt: z.string(),
        content: z.string(),
    }),
});

type Post = z.infer<typeof Post>;

// const record = data.records.find((record) => {
//     const slug = createSlug(record.value.title);
//     if (slug === Astro.params.slug) {
//         return record;
//     }
// });

const { data } = await rpc.get("com.atproto.repo.listRecords", {
    params: {
        collection: "com.whtwnd.blog.entry",
        repo: "nandi.dads.lol",
    },
});
// console.log({ data });
const slugs = data.records.map((r) => {
    const record: Post = Post.parse(r);
    const slug = createSlug(record.value.title);
    const { title, createdAt, content } = record.value;
    const cid = record.cid;
    return { params: { slug, cid, title, createdAt, content } };
});
// console.log({ slugs });

const record = slugs
    .filter((record) => {
        if (record.params.slug === Astro.params.slug) {
            return true;
        }
    })
    .map((record) => {
        return record.params;
    })[0];

import Article from "../../components/Article.astro";
---

<Layout>
    <h1 class="text-2xl font-bold mb-4">Nandi's ATproto Blog</h1>
    <Article record={record} />
    <a
        href="/blog"
        class="block mt-4 underline decoration-2 underline-offset-4 text-blue-500 hover:text-blue-700 transition-colors duration-300"
    >
        Blog
    </a>
</Layout>
